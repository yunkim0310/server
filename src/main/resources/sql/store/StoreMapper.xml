<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.server.dao.StoreDao">

    <resultMap type="com.server.domain.StoreOperation" id="StoreOperationResultMap">

    </resultMap>

    <resultMap type="com.server.domain.Store" id="StoreResultMap">

    </resultMap>

    <!-- 사업자 번호 중복 확인 -->
    <select id="chkDuplicateBusinessNo"
            parameterType="String"
            resultType="int">

        SELECT COUNT(business_no)
        FROM store
        WHERE store_status = 0
        AND business_no = #{businessNo}

    </select>

    <!-- 가게 등록 TODO-->
    <insert id="addStore"
            parameterType="com.server.domain.Store"
            useGeneratedKeys="true" keyColumn="store_id" keyProperty="storeId">

        INSERT INTO store(username, business_no, store_name, store_addr, store_phone,
                          store_info, food_category_id, special_menu_no,
                          store_img1, store_img2, store_img3,
                          store_img4, store_img5, hashtag)
        VALUES (#{userName}, #{businessNo}, #{storeName}, #{storeAddr}, #{storePhone:null},
            #{storeInfo:null}, #{foodCategoryId}, #{specialMenuNo},
            #{storeImgList[0]}, #{storeImgList[1]}, #{storeImgList[2]},
            #{storeImgList[3]:null}, #{storeImgList[4]:null},
            <if test="hashtagList != null and hashtagList.size() > 0">
                <foreach collection="hashtagList" open='"' close='"' separator="," item="hashtag">
                    #{hashtag}
                </foreach>
            </if>
            <if test="hashtagList == null or hashtagList.size() == 0">
                NULL
            </if>
            )

    </insert>

    <!-- 가게 정보 조회 -->
    <select id="getStore"
            parameterType="com.server.domain.Store"
            resultMap="StoreResultMap">

    </select>

    <!-- 가게 검색, 가게 목록 조회 -->
    <select id="getStoreList"
            parameterType="com.server.domain.Search"
            resultMap="StoreResultMap">


    </select>

    <!-- 가게 수정 TODO-->
    <update id="updateStore"
            parameterType="com.server.domain.Store">

        UPDATE store
        SET (store_name=#{storeName}, store_phone=#{storePhone:null}, store_info=#{storeInfo:null},
            food_category_id=#{foodCategoryId}, special_menu_no=#{specialMenuNo},
            store_img1=#{storeImgList[0]}, store_img2=#{storeImgList[1]}, store_img3=#{storeImgList[2]},
            store_img4=#{storeImgList[3]:null}, store_img5=#{storeImgList[4]:null},
            hashtag=
            <if test="hashtagList != null and hashtagList.size() > 0">
                <foreach collection="hashtagList" open='"' close='"' separator="," item="hashtag">
                    #{hashtag}
                </foreach>
            </if>
            <if test="hashtagList == null or hashtagList.size() == 0">
                NULL
            </if>
            )
        WHERE store_id = #{storeId}

    </update>

    <!-- 가게 삭제 TODO-->
    <update id="removeStore"
            parameterType="int">

        UPDATE store
        SET (store_status = 1)
        WHERE store_id = #{storeId}

    </update>

    <!-- 편의시설 등록 TODO-->
    <insert id="addAmenities"
            parameterType="map">

        INSERT INTO amenities(store_id, amenities_no)
        VALUES
            <foreach collection="amenitiesNoList" item="amenitiesNo" separator=",">
                (#{storeId}, #{amenitiesNo})
            </foreach>

    </insert>

    <!-- 편의시설 삭제 (통채로 삭제후 다시 등록) TODO-->
    <delete id="removeAmenities"
            parameterType="int">

        DELETE *
        FROM amenities
        WHERE store_id = #{storeId}

    </delete>

    <!-- 메뉴 등록 TODO-->
    <insert id="addMenu"
            parameterType="map">

        INSERT INTO Menu(store_id, menu_no, menu_img, menu_name, menu_price, menu_info)
        VALUES
            <foreach collection="menuList" item="menu" separator=",">
                (#{storeId}, #{menu.menuNo},#{menu.menuImg:null}, #{menu.menuName}, #{menu.menuPrice}, #{menu.menuInfo})
            </foreach>

    </insert>

    <!-- 메뉴 삭제 (통채로 삭제후 다시 등록) TODO-->
    <delete id="removeMenu"
            parameterType="int">

        DELETE *
        FROM menu
        WHERE store_id = #{storeId}

    </delete>

    <!-- 가게 운영 등록 -->
    <insert id="addOperation"
            parameterType="com.placeHere.server.domain.StoreOperation">

        INSERT INTO operation(store_id, open_time, close_time, break_time_start, break_time_end,
                              security, rsrv_limit, regular_cloaseday1, regular_closeday2, regular_closeday3, effect_dt)
        SET (#{storeId}, #{openTime}, #{closeTime}, #{breakTimeStart}, #{breakTimeEnd},
            #{security}, #{rsrvLimit}, #{regularClosedayList[0]}, #{regularClosedayList[1]}, #{regularClosedayList[2]}, #{effectDt})

    </insert>

    <!-- 가게 운영 조회 (날짜로 적용되고 있는 운영 정보 조회) -->
    <select id="getOperationByDt"
            resultMap="StoreOperationResultMap">

    </select>

    <!-- 최신 가게 운영 조회 -->
    <select id="getCurrOperation"
            parameterType="int"
            resultMap="StoreOperationResultMap">

    </select>

    <!-- 매장 소식 등록 -->
    <insert id="addStoreNews"
            parameterType="com.placeHere.server.domain.StoreNews">

    </insert>

    <!-- 매장 소식 목록 조회 -->
    <select id="getStoreNewsList"
            parameterType="int">

    </select>

    <!-- 매장 소식 수정 -->
    <update id="updateStoreNews"
            parameterType="com.placeHere.server.domain.StoreNews">

    </update>

    <!-- 매장 소식 삭제 -->
    <delete id="removeStoreNews"
            parameterType="int">

    </delete>

    <!-- 휴무일 등록 -->
    <insert id="addCloseday">

    </insert>

    <!-- 휴무일 목록 조회 -->
    <select id="getClosedayList"
            parameterType="int">

    </select>

    <!-- 휴무일 삭제 -->
    <delete id="removeCloseday"
            parameterType="int">

    </delete>

</mapper>